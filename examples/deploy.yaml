apiVersion: v1
kind: Service
metadata:
  name: metrics-server
  namespace: monitoring
  labels:
    app: metrics-server
spec:
  ports:
  - port: 9999
    protocol: UDP
  selector:
    app: metrics-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metrics-server
  namespace: monitoring
  labels:
    app: metrics-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: metrics-server
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: metrics-server
      annotations:
        prometheus.metrics-server.io/path: /metrics
        prometheus.metrics-server.io/port: "9099"
        prometheus.metrics-server.io/scrape: "true"
    spec:
      containers:
      - name: metrics-server
        image: <REPO>/metrics-server:latest
        imagePullPolicy: IfNotPresent
        args:
        - -shutdown-delay=30s
        - -uds=/tmp/metrics-server.sock
        - -debug
        resources:
          limits:
            cpu: "2"
            memory: 500Mi
          requests:
            cpu: "300m"
            memory: 100Mi
        ports:
        - name: http
          containerPort: 9099
          protocol: TCP
        - name: udp-collector
          containerPort: 9999
          protocol: UDP
        livenessProbe:
          httpGet:
            path: /health
            port: http
        readinessProbe:
          httpGet:
            path: /health
            port: http
