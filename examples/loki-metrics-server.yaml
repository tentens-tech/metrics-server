apiVersion: v1
kind: Service
metadata:
  name: loki-metrics-server
  namespace: monitoring
  labels:
    app: loki-metrics-server
spec:
  ports:
    - port: 9999
      protocol: UDP
  selector:
    app: loki-metrics-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki-metrics-server
  namespace: monitoring
  labels:
    app: loki-metrics-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loki-metrics-server
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: loki-metrics-server
      annotations:
        prometheus.metrics-server.io/path: /metrics
        prometheus.metrics-server.io/port: "9099"
        prometheus.metrics-server.io/scrape: "true"
    spec:
      containers:
        - name: loki-metrics-server
          image: <REPO>.metrics-server:latest
          imagePullPolicy: IfNotPresent
          args:
            - -shutdown-delay=30s
            - -uds=/tmp/metrics-server.sock
            - -loki-address=https://loki.social-tech.io:9443/loki/api/v1/push
            - -loki-ca-path=/opt/loki-tls/ca.pem
            - -loki-cert-path=/opt/loki-tls/client.pem
            - -loki-key-path=/opt/loki-tls/client-key.pem
          resources:
            limits:
              cpu: "2"
              memory: 500Mi
            requests:
              cpu: "300m"
              memory: 100Mi
          ports:
            - name: http
              containerPort: 9099
              protocol: TCP
            - name: udp-collector
              containerPort: 9999
              protocol: UDP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          volumeMounts:
            - name: loki-tls
              mountPath: /opt/loki-tls
      volumes:
        - name: loki-tls
          secret:
            secretName: loki-tls